"use strict";(self.webpackChunkkonva_site_2=self.webpackChunkkonva_site_2||[]).push([[3564],{19047:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>v,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"docs/sandbox/Physics_Simulator","title":"\u5177\u6709\u66f2\u7ebf\u68c0\u6d4b\u529f\u80fd\u7684\u7269\u7406\u6a21\u62df\u5668","description":"\u8bf4\u660e\uff1a\u7528\u9f20\u6807\u5149\u6807\u629b\u63b7\u5c0f\u7403\u3002","source":"@site/content/docs/sandbox/Physics_Simulator.mdx","sourceDirName":"docs/sandbox","slug":"/docs/sandbox/Physics_Simulator.html","permalink":"/docs/sandbox/Physics_Simulator.html","draft":false,"unlisted":false,"editUrl":"https://github.com/zhcndoc/konva/tree/main/content/docs/sandbox/Physics_Simulator.mdx","tags":[],"version":"current","frontMatter":{"title":"\u5177\u6709\u66f2\u7ebf\u68c0\u6d4b\u529f\u80fd\u7684\u7269\u7406\u6a21\u62df\u5668","sidebar_label":"\u7269\u7406\u6a21\u62df\u5668","hide_table_of_contents":true,"slug":"Physics_Simulator.html"},"sidebar":"tutorialsSidebar","previous":{"title":"\u5bf9\u8c61\u5bf9\u9f50","permalink":"/docs/sandbox/\u5bf9\u8c61_\u5bf9\u9f50.html"},"next":{"title":"\u884c\u661f\u56fe\u50cf\u5730\u56fe","permalink":"/docs/sandbox/Planets_Image_Map.html"}}');var o=a(74848),l=a(28453);const r={title:"\u5177\u6709\u66f2\u7ebf\u68c0\u6d4b\u529f\u80fd\u7684\u7269\u7406\u6a21\u62df\u5668",sidebar_label:"\u7269\u7406\u6a21\u62df\u5668",hide_table_of_contents:!0,slug:"Physics_Simulator.html"},i=void 0,s={},c=[];function u(n){const e={code:"code",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"\u8bf4\u660e\uff1a\u7528\u9f20\u6807\u5149\u6807\u629b\u63b7\u5c0f\u7403\u3002"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",metastring:"live vanilla",live:!0,children:"import Konva from 'konva';\n\nconst width = window.innerWidth;\nconst height = window.innerHeight;\n\n/*\n * \u5411\u91cf\u6570\u5b66\u51fd\u6570\n */\nfunction dot(a, b) {\n  return a.x * b.x + a.y * b.y;\n}\nfunction magnitude(a) {\n  return Math.sqrt(a.x * a.x + a.y * a.y);\n}\nfunction normalize(a) {\n  var mag = magnitude(a);\n\n  if (mag === 0) {\n    return {\n      x: 0,\n      y: 0,\n    };\n  } else {\n    return {\n      x: a.x / mag,\n      y: a.y / mag,\n    };\n  }\n}\nfunction add(a, b) {\n  return {\n    x: a.x + b.x,\n    y: a.y + b.y,\n  };\n}\nfunction angleBetween(a, b) {\n  return Math.acos(dot(a, b) / (magnitude(a) * magnitude(b)));\n}\nfunction rotate(a, angle) {\n  var ca = Math.cos(angle);\n  var sa = Math.sin(angle);\n  var rx = a.x * ca - a.y * sa;\n  var ry = a.x * sa + a.y * ca;\n  return {\n    x: rx * -1,\n    y: ry * -1,\n  };\n}\nfunction invert(a) {\n  return {\n    x: a.x * -1,\n    y: a.y * -1,\n  };\n}\n/*\n * \u8be5\u53c9\u79ef\u51fd\u6570\u5df2\u7b80\u5316\uff0c\n * \u7531\u4e8e\u5411\u91cf a \u548c b \u4f4d\u4e8e\u753b\u5e03\u5e73\u9762\uff0c\n * \u56e0\u6b64 x \u548c y \u8bbe\u4e3a\u96f6\n */\nfunction cross(a, b) {\n  return {\n    x: 0,\n    y: 0,\n    z: a.x * b.y - b.x * a.y,\n  };\n}\nfunction getNormal(curve, ball) {\n  var curveLayer = curve.getLayer();\n  var context = curveLayer.getContext();\n  var testRadius = 20;\n  // \u50cf\u7d20\n  var totalX = 0;\n  var totalY = 0;\n  var x = ball.x();\n  var y = ball.y();\n  /*\n   * \u68c0\u67e5\u4e2d\u5fc3\u70b9\u5468\u56f4\u7684\u591a\u4e2a\u70b9\uff0c\n   * \u4ee5\u786e\u5b9a\u6cd5\u5411\u91cf\n   */\n  for (var n = 0; n < 20; n++) {\n    var angle = (n * 2 * Math.PI) / 20;\n    var offsetX = testRadius * Math.cos(angle);\n    var offsetY = testRadius * Math.sin(angle);\n    var testX = x + offsetX;\n    var testY = y + offsetY;\n    if (!context._context.isPointInPath(testX, testY)) {\n      totalX += offsetX;\n      totalY += offsetY;\n    }\n  }\n\n  var normal;\n\n  if (totalX === 0 && totalY === 0) {\n    normal = {\n      x: 0,\n      y: -1,\n    };\n  } else {\n    normal = {\n      x: totalX,\n      y: totalY,\n    };\n  }\n\n  return normalize(normal);\n}\nfunction handleCurveCollision(ball, curve) {\n  var curveLayer = curve.getLayer();\n  var x = ball.x();\n  var y = ball.y();\n\n  var curveDamper = 0.05;\n  // 5% \u80fd\u91cf\u635f\u5931\n  if (curveLayer.getIntersection({ x: x, y: y })) {\n    var normal = getNormal(curve, ball);\n    if (normal !== null) {\n      var angleToNormal = angleBetween(normal, invert(ball.velocity));\n      var crossProduct = cross(normal, ball.velocity);\n      var polarity = crossProduct.z > 0 ? 1 : -1;\n      var collisonAngle = polarity * angleToNormal * 2;\n      var collisionVector = rotate(ball.velocity, collisonAngle);\n\n      ball.velocity.x = collisionVector.x;\n      ball.velocity.y = collisionVector.y;\n      ball.velocity.x *= 1 - curveDamper;\n      ball.velocity.y *= 1 - curveDamper;\n\n      x += normal.x;\n      if (ball.velocity.y > 0.1) {\n        y += normal.y;\n      } else {\n        y += normal.y / 10;\n      }\n      ball.x(x).y(y);\n    }\n\n    tween.finish();\n  }\n}\nfunction updateBall(frame) {\n  var timeDiff = frame.timeDiff;\n  var stage = ball.getStage();\n  var height = stage.height();\n  var width = stage.width();\n  var x = ball.x();\n  var y = ball.y();\n  var radius = ball.radius();\n\n  tween.reverse();\n\n  // \u7269\u7406\u53d8\u91cf\n  var gravity = 10;\n  // \u50cf\u7d20/\u79d2\xb2\n  var speedIncrementFromGravityEachFrame = (gravity * timeDiff) / 1000;\n  var collisionDamper = 0.2;\n  // 20% \u80fd\u91cf\u635f\u5931\n  var floorFriction = 5;\n  // \u50cf\u7d20/\u79d2\xb2\n  var floorFrictionSpeedReduction = (floorFriction * timeDiff) / 1000;\n\n  // \u5982\u679c\u7403\u88ab\u62d6\u62fd\n  if (ball.isDragging()) {\n    var mousePos = stage.getPointerPosition();\n\n    if (mousePos) {\n      var mouseX = mousePos.x;\n      var mouseY = mousePos.y;\n\n      var c = 0.06 * timeDiff;\n      ball.velocity = {\n        x: c * (mouseX - ball.lastMouseX),\n        y: c * (mouseY - ball.lastMouseY),\n      };\n\n      ball.lastMouseX = mouseX;\n      ball.lastMouseY = mouseY;\n    }\n  } else {\n    // \u91cd\u529b\n    ball.velocity.y += speedIncrementFromGravityEachFrame;\n    x += ball.velocity.x;\n    y += ball.velocity.y;\n\n    // \u5929\u82b1\u677f\u78b0\u649e\u6761\u4ef6\n    if (y < radius) {\n      y = radius;\n      ball.velocity.y *= -1;\n      ball.velocity.y *= 1 - collisionDamper;\n    }\n\n    // \u5730\u677f\u78b0\u649e\u6761\u4ef6\n    if (y > height - radius) {\n      y = height - radius;\n      ball.velocity.y *= -1;\n      ball.velocity.y *= 1 - collisionDamper;\n    }\n\n    // \u5730\u677f\u6469\u64e6\n    if (y == height - radius) {\n      if (ball.velocity.x > 0.1) {\n        ball.velocity.y -= floorFrictionSpeedReduction;\n      } else if (ball.velocity.x < -0.1) {\n        ball.velocity.x += floorFrictionSpeedReduction;\n      } else {\n        ball.velocity.x = 0;\n      }\n    }\n\n    // \u53f3\u5899\u78b0\u649e\u6761\u4ef6\n    if (x > width - radius) {\n      x = width - radius;\n      ball.velocity.x *= -1;\n      ball.velocity.x *= 1 - collisionDamper;\n    }\n\n    // \u5de6\u5899\u78b0\u649e\u6761\u4ef6\n    if (x < radius) {\n      x = radius;\n      ball.velocity.x *= -1;\n      ball.velocity.x *= 1 - collisionDamper;\n    }\n\n    ball.position({ x: x, y: y });\n\n    /*\n     * \u5982\u679c\u7403\u4e0e\u66f2\u7ebf\u63a5\u89e6\uff0c\u5219\u6cbf\n     * \u66f2\u7ebf\u8868\u9762\u6cd5\u7ebf\u65b9\u5411\u53cd\u5f39\n     */\n    var collision = handleCurveCollision(ball, curve);\n  }\n}\n\n// \u521b\u5efa\u821e\u53f0\nconst stage = new Konva.Stage({\n  container: 'container',\n  width: width,\n  height: height,\n});\n\n// \u521b\u5efa\u66f2\u7ebf\u548c\u7403\u7684\u72ec\u7acb\u56fe\u5c42\nconst curveLayer = new Konva.Layer();\nconst ballLayer = new Konva.Layer();\n\n// \u4f7f\u7528\u539f\u59cb\u8d1d\u585e\u5c14\u66f2\u7ebf\u521b\u5efa\u66f2\u7ebf\nconst curve = new Konva.Shape({\n  sceneFunc: function (context) {\n    context.beginPath();\n    context.moveTo(40, height);\n    context.bezierCurveTo(\n      width * 0.2,\n      -1 * height * 0.5,\n      width * 0.7,\n      height * 1.3,\n      width,\n      height * 0.5\n    );\n    context.lineTo(width, height);\n    context.lineTo(40, height);\n    context.closePath();\n    context.fillShape(this);\n  },\n  fill: '#8dbdff',\n});\n\ncurveLayer.add(curve);\n\n// \u521b\u5efa\u539f\u6837\u5f0f\u7403\nconst ball = new Konva.Circle({\n  x: 190,\n  y: 20,\n  radius: 20,\n  fill: 'blue',\n  draggable: true,\n  opacity: 0.8,\n});\n\nball.velocity = {\n  x: 0,\n  y: 0,\n};\n\n// \u6dfb\u52a0\u539f\u4e8b\u4ef6\u5904\u7406\u5668\nball.on('dragstart', function () {\n  ball.velocity = {\n    x: 0,\n    y: 0,\n  };\n  anim.start();\n});\n\nball.on('mousedown', function () {\n  anim.stop();\n});\n\nball.on('mouseover', function () {\n  document.body.style.cursor = 'pointer';\n});\n\nball.on('mouseout', function () {\n  document.body.style.cursor = 'default';\n});\n\nballLayer.add(ball);\n\n// \u6309\u6b63\u786e\u987a\u5e8f\u6dfb\u52a0\u56fe\u5c42\u5230\u821e\u53f0\nstage.add(curveLayer);\nstage.add(ballLayer);\n\n// \u6dfb\u52a0\u539f\u6837\u5f0f tween \u52a8\u753b\nconst tween = new Konva.Tween({\n  node: ball,\n  fill: 'red',\n  duration: 0.3,\n  easing: Konva.Easings.EaseOut,\n});\n\n// \u6dfb\u52a0\u52a8\u753b\nconst anim = new Konva.Animation(function (frame) {\n  updateBall(frame);\n}, ballLayer);\n\nanim.start();\n"})})]})}function v(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(u,{...n})}):u(n)}},28453:(n,e,a)=>{a.d(e,{R:()=>r,x:()=>i});var t=a(96540);const o={},l=t.createContext(o);function r(n){const e=t.useContext(l);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),t.createElement(l.Provider,{value:e},n.children)}}}]);