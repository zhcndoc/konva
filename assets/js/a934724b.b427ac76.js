"use strict";(self.webpackChunkkonva_site_2=self.webpackChunkkonva_site_2||[]).push([[1241],{64687:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>i});const r=JSON.parse('{"id":"docs/react/Transformer","title":"\u5982\u4f55\u4f7f\u7528 React \u548c Konva \u8c03\u6574\u753b\u5e03\u5f62\u72b6\u7684\u5927\u5c0f\u548c\u65cb\u8f6c\uff1f","description":"\u76ee\u524d\u8fd8\u6ca1\u6709\u4e00\u4e2a\u597d\u7528\u7684\u3001\u7eaf\u58f0\u660e\u5f0f\u7684\u201cReact \u65b9\u5f0f\u201d\u6765\u4f7f\u7528 Transformer \u5de5\u5177\u3002","source":"@site/content/docs/react/Transformer.mdx","sourceDirName":"docs/react","slug":"/docs/react/Transformer.html","permalink":"/docs/react/Transformer.html","draft":false,"unlisted":false,"editUrl":"https://github.com/zhcndoc/konva/tree/main/content/docs/react/Transformer.mdx","tags":[],"version":"current","frontMatter":{"title":"\u5982\u4f55\u4f7f\u7528 React \u548c Konva \u8c03\u6574\u753b\u5e03\u5f62\u72b6\u7684\u5927\u5c0f\u548c\u65cb\u8f6c\uff1f","sidebar_label":"\u8f6c\u6362\u5668","hide_table_of_contents":true,"slug":"Transformer.html"},"sidebar":"tutorialsSidebar","previous":{"title":"\u7b80\u5355\u52a8\u753b","permalink":"/docs/react/Simple_Animations.html"},"next":{"title":"\u64a4\u9500/\u91cd\u505a","permalink":"/docs/react/Undo-Redo.html"}}');var c=t(74848),s=t(28453);const a={title:"\u5982\u4f55\u4f7f\u7528 React \u548c Konva \u8c03\u6574\u753b\u5e03\u5f62\u72b6\u7684\u5927\u5c0f\u548c\u65cb\u8f6c\uff1f",sidebar_label:"\u8f6c\u6362\u5668",hide_table_of_contents:!0,slug:"Transformer.html"},o=void 0,l={},i=[];function d(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.p,{children:"\u76ee\u524d\u8fd8\u6ca1\u6709\u4e00\u4e2a\u597d\u7528\u7684\u3001\u7eaf\u58f0\u660e\u5f0f\u7684\u201cReact \u65b9\u5f0f\u201d\u6765\u4f7f\u7528 Transformer \u5de5\u5177\u3002\n\u4f46\u4f60\u4f9d\u7136\u53ef\u4ee5\u901a\u8fc7\u5bf9 Konva \u8282\u70b9\u8fdb\u884c\u4e00\u4e9b\u5c0f\u7684\u624b\u52a8\u64cd\u4f5c\u6765\u4f7f\u7528\u5b83\u3002\n\u5b83\u4f9d\u65e7\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002"}),"\n",(0,c.jsxs)(n.p,{children:["\u601d\u8def\u662f\uff1a\u4f60\u9700\u8981\u521b\u5efa\u4e00\u4e2a ",(0,c.jsx)(n.code,{children:"Konva.Transformer"})," \u8282\u70b9\uff0c\u5e76\u624b\u52a8\u5c06\u5176\u9644\u52a0\u5230\u6240\u9700\u8282\u70b9\u4e0a\u3002"]}),"\n",(0,c.jsx)(n.p,{children:"\u4f7f\u7528\u8bf4\u660e\uff1a\u70b9\u51fb\u5176\u4e2d\u4e00\u4e2a\u77e9\u5f62\u4ee5\u9009\u62e9\u5b83\u3002\u7136\u540e\u4f60\u53ef\u4ee5\uff1a"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"\u62d6\u52a8\u5b83\u79fb\u52a8"}),"\n",(0,c.jsx)(n.li,{children:"\u4f7f\u7528\u63a7\u5236\u70b9\u8c03\u6574\u5927\u5c0f"}),"\n",(0,c.jsx)(n.li,{children:"\u70b9\u51fb\u753b\u5e03\u7a7a\u767d\u5904\u53d6\u6d88\u9009\u62e9"}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-js",metastring:"live react",live:!0,children:"import React from 'react';\nimport { Stage, Layer, Rect, Transformer } from 'react-konva';\n\nconst Rectangle = ({ shapeProps, isSelected, onSelect, onChange }) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  React.useEffect(() => {\n    if (isSelected) {\n      // \u9700\u8981\u624b\u52a8\u9644\u52a0\u8f6c\u6362\u5668\n      trRef.current.nodes([shapeRef.current]);\n    }\n  }, [isSelected]);\n\n  return (\n    <React.Fragment>\n      <Rect\n        onClick={onSelect}\n        onTap={onSelect}\n        ref={shapeRef}\n        {...shapeProps}\n        draggable\n        onDragEnd={(e) => {\n          onChange({\n            ...shapeProps,\n            x: e.target.x(),\n            y: e.target.y(),\n          });\n        }}\n        onTransformEnd={(e) => {\n          // \u8f6c\u6362\u5668\u6539\u53d8\u8282\u70b9\u7684\u7f29\u653e\u6bd4\u4f8b\n          // \u800c\u975e\u76f4\u63a5\u6539\u53d8\u5bbd\u5ea6\u6216\u9ad8\u5ea6\n          // \u4f46\u5b58\u50a8\u7684\u6570\u636e\u91cc\u53ea\u6709\u5bbd\u5ea6\u548c\u9ad8\u5ea6\n          // \u4e3a\u4e86\u6570\u636e\u4e00\u81f4\u6027\uff0c\u8f6c\u6362\u7ed3\u675f\u65f6\u91cd\u7f6e\u7f29\u653e\u6bd4\u4f8b\n          const node = shapeRef.current;\n          const scaleX = node.scaleX();\n          const scaleY = node.scaleY();\n\n          // \u91cd\u7f6e\u7f29\u653e\u6bd4\u4f8b\n          node.scaleX(1);\n          node.scaleY(1);\n          onChange({\n            ...shapeProps,\n            x: node.x(),\n            y: node.y(),\n            // \u8bbe\u5b9a\u6700\u5c0f\u503c\n            width: Math.max(5, node.width() * scaleX),\n            height: Math.max(node.height() * scaleY),\n          });\n        }}\n      />\n      {isSelected && (\n        <Transformer\n          ref={trRef}\n          flipEnabled={false}\n          boundBoxFunc={(oldBox, newBox) => {\n            // \u9650\u5236\u8c03\u6574\u5927\u5c0f\u7684\u6700\u5c0f\u8fb9\u754c\n            if (Math.abs(newBox.width) < 5 || Math.abs(newBox.height) < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nconst initialRectangles = [\n  {\n    x: 10,\n    y: 10,\n    width: 100,\n    height: 100,\n    fill: 'red',\n    id: 'rect1',\n  },\n  {\n    x: 150,\n    y: 150,\n    width: 100,\n    height: 100,\n    fill: 'green',\n    id: 'rect2',\n  },\n];\n\nconst App = () => {\n  const [rectangles, setRectangles] = React.useState(initialRectangles);\n  const [selectedId, selectShape] = React.useState(null);\n\n  const checkDeselect = (e) => {\n    // \u70b9\u51fb\u7a7a\u767d\u533a\u57df\u65f6\u53d6\u6d88\u9009\u62e9\n    const clickedOnEmpty = e.target === e.target.getStage();\n    if (clickedOnEmpty) {\n      selectShape(null);\n    }\n  };\n\n  return (\n    <Stage\n      width={window.innerWidth}\n      height={window.innerHeight}\n      onMouseDown={checkDeselect}\n      onTouchStart={checkDeselect}\n    >\n      <Layer>\n        {rectangles.map((rect, i) => {\n          return (\n            <Rectangle\n              key={i}\n              shapeProps={rect}\n              isSelected={rect.id === selectedId}\n              onSelect={() => {\n                selectShape(rect.id);\n              }}\n              onChange={(newAttrs) => {\n                const rects = rectangles.slice();\n                rects[i] = newAttrs;\n                setRectangles(rects);\n              }}\n            />\n          );\n        })}\n      </Layer>\n    </Stage>\n  );\n};\n\nexport default App;\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(96540);const c={},s=r.createContext(c);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);