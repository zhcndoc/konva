"use strict";(self.webpackChunkkonva_site_2=self.webpackChunkkonva_site_2||[]).push([[1371],{87177:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"api/Konva.Label","title":"Konva.Label","description":"Label constructor.&nbsp; Labels are groups that contain a Text and Tag shape","source":"@site/content/api/Konva.Label.mdx","sourceDirName":"api","slug":"/api/Konva.Label.html","permalink":"/api/Konva.Label.html","draft":false,"unlisted":false,"editUrl":"https://github.com/zhcndoc/konva/tree/main/content/api/Konva.Label.mdx","tags":[],"version":"current","frontMatter":{"title":"Konva.Label","sidebar_label":"Label","slug":"/api/Konva.Label.html"},"sidebar":"apiSidebar","previous":{"title":"Image","permalink":"/api/Konva.Image.html"},"next":{"title":"Layer","permalink":"/api/Konva.Layer.html"}}');var r=n(74848),s=n(28453);const i={title:"Konva.Label",sidebar_label:"Label",slug:"/api/Konva.Label.html"},l="Label",a={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Own Methods",id:"own-methods",level:2},{value:"getText()",id:"getText",level:3},{value:"getTag()",id:"getTag",level:3}];function o(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"label",children:"Label"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"new Konva.Label(config)\n"})}),"\n",(0,r.jsx)(t.p,{children:"Label constructor.\xa0 Labels are groups that contain a Text and Tag shape"}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"config"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Object"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"x (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Number"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"y (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Number"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"width (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Number"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"height (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Number"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"visible (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Boolean"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"listening (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Boolean"})}),(0,r.jsx)(t.td,{children:"whether or not the node is listening for events"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"id (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"String"})}),(0,r.jsx)(t.td,{children:"unique id"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"name (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"String"})}),(0,r.jsx)(t.td,{children:"non-unique name"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"opacity (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Number"})}),(0,r.jsx)(t.td,{children:"determines node opacity.  Can be any number between 0 and 1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"scale (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Object"})}),(0,r.jsx)(t.td,{children:"set scale"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"scaleX (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Number"})}),(0,r.jsx)(t.td,{children:"set scale x"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"scaleY (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Number"})}),(0,r.jsx)(t.td,{children:"set scale y"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"rotation (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Number"})}),(0,r.jsx)(t.td,{children:"rotation in degrees"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"offset (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Object"})}),(0,r.jsx)(t.td,{children:"offset from center point and rotation point"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"offsetX (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Number"})}),(0,r.jsx)(t.td,{children:"set offset x"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"offsetY (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Number"})}),(0,r.jsx)(t.td,{children:"set offset y"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"draggable (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Boolean"})}),(0,r.jsx)(t.td,{children:"makes the node draggable.  When stages are draggable, you can drag and drop  the entire stage by dragging any portion of the stage"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"dragDistance (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"Number"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"dragBoundFunc (optional)"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"function"})}),(0,r.jsx)(t.td,{})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"own-methods",children:"Own Methods"}),"\n",(0,r.jsx)(t.h3,{id:"getText",children:"getText()"}),"\n",(0,r.jsx)(t.p,{children:"get Text shape for the label.  You need to access the Text shape in order to update the text properties"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Example:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"label.getText().fill('red')\n"})}),"\n",(0,r.jsx)(t.h3,{id:"getTag",children:"getTag()"}),"\n",(0,r.jsx)(t.p,{children:"get Tag shape for the label.  You need to access the Tag shape in order to update the pointer properties and the corner radius"})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var d=n(96540);const r={},s=d.createContext(r);function i(e){const t=d.useContext(s);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),d.createElement(s.Provider,{value:t},e.children)}}}]);