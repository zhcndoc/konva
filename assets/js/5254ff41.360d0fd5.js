"use strict";(self.webpackChunkkonva_site_2=self.webpackChunkkonva_site_2||[]).push([[848],{36645:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"docs/sandbox/Wheel_of_Fortune","title":"\u5e78\u8fd0\u8f6e HTML5 \u753b\u5e03\u6e38\u620f","description":"\u672c\u6f14\u793a\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 Konva \u521b\u5efa\u4e00\u4e2a\u4e92\u52a8\u7684\u5e78\u8fd0\u8f6e\u6e38\u620f\u3002\u8f6e\u5b50\u53ef\u4ee5\u901a\u8fc7\u9f20\u6807\u6216\u89e6\u6478\u8f93\u5165\u8fdb\u884c\u65cb\u8f6c\uff0c\u5e76\u4f1a\u56e0\u89d2\u6469\u64e6\u9010\u6e10\u51cf\u901f\u3002\u5f53\u5b83\u505c\u6b62\u65f6\uff0c\u5c06\u663e\u793a\u4f60\u7684\u5956\u54c1\uff01","source":"@site/content/docs/sandbox/Wheel_of_Fortune.mdx","sourceDirName":"docs/sandbox","slug":"/docs/sandbox/Wheel_of_Fortune.html","permalink":"/docs/sandbox/Wheel_of_Fortune.html","draft":false,"unlisted":false,"editUrl":"https://github.com/zhcndoc/konva/tree/main/content/docs/sandbox/Wheel_of_Fortune.mdx","tags":[],"version":"current","frontMatter":{"title":"\u5e78\u8fd0\u8f6e HTML5 \u753b\u5e03\u6e38\u620f","sidebar_label":"\u5e78\u8fd0\u8f6e","hide_table_of_contents":true,"slug":"Wheel_of_Fortune.html"},"sidebar":"tutorialsSidebar","previous":{"title":"Web Worker","permalink":"/docs/sandbox/Web_Worker.html"},"next":{"title":"\u7a97\u53e3\u6846\u67b6\u8bbe\u8ba1\u5668","permalink":"/docs/sandbox/Window_Frame_Designer"}}');var o=t(74848),i=t(28453);const r={title:"\u5e78\u8fd0\u8f6e HTML5 \u753b\u5e03\u6e38\u620f",sidebar_label:"\u5e78\u8fd0\u8f6e",hide_table_of_contents:!0,slug:"Wheel_of_Fortune.html"},l=void 0,s={},d=[];function c(n){const e={code:"code",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:"\u672c\u6f14\u793a\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 Konva \u521b\u5efa\u4e00\u4e2a\u4e92\u52a8\u7684\u5e78\u8fd0\u8f6e\u6e38\u620f\u3002\u8f6e\u5b50\u53ef\u4ee5\u901a\u8fc7\u9f20\u6807\u6216\u89e6\u6478\u8f93\u5165\u8fdb\u884c\u65cb\u8f6c\uff0c\u5e76\u4f1a\u56e0\u89d2\u6469\u64e6\u9010\u6e10\u51cf\u901f\u3002\u5f53\u5b83\u505c\u6b62\u65f6\uff0c\u5c06\u663e\u793a\u4f60\u7684\u5956\u54c1\uff01"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",metastring:"live vanilla",live:!0,children:"import Konva from 'konva';\n\nKonva.angleDeg = false;\nlet angularVelocity = 6;\nconst angularVelocities = [];\nlet lastRotation = 0;\nlet controlled = false;\nconst numWedges = 25;\nconst angularFriction = 0.2;\nlet target, activeWedge, stage, layer, wheel, pointer;\nlet finished = false;\n\nfunction getAverageAngularVelocity() {\n  const total = angularVelocities.reduce((sum, vel) => sum + vel, 0);\n  return angularVelocities.length ? total / angularVelocities.length : 0;\n}\n\nfunction purifyColor(color) {\n  const randIndex = Math.round(Math.random() * 3);\n  color[randIndex] = 0;\n  return color;\n}\n\nfunction getRandomColor() {\n  const r = 100 + Math.round(Math.random() * 55);\n  const g = 100 + Math.round(Math.random() * 55);\n  const b = 100 + Math.round(Math.random() * 55);\n  return purifyColor([r, g, b]);\n}\n\nfunction getRandomReward() {\n  const mainDigit = Math.round(Math.random() * 9);\n  return mainDigit + '\\n0\\n0';\n}\n\nfunction addWedge(n) {\n  const s = getRandomColor();\n  const reward = getRandomReward();\n  const [r, g, b] = s;\n  const angle = (2 * Math.PI) / numWedges;\n\n  const endColor = `rgb(${r},${g},${b})`;\n  const startColor = `rgb(${r + 100},${g + 100},${b + 100})`;\n\n  const wedge = new Konva.Group({\n    rotation: (2 * n * Math.PI) / numWedges,\n  });\n\n  const wedgeBackground = new Konva.Wedge({\n    radius: 400,\n    angle: angle,\n    fillRadialGradientStartPoint: 0,\n    fillRadialGradientStartRadius: 0,\n    fillRadialGradientEndPoint: 0,\n    fillRadialGradientEndRadius: 400,\n    fillRadialGradientColorStops: [0, startColor, 1, endColor],\n    fill: '#64e9f8',\n    fillPriority: 'radial-gradient',\n    stroke: '#ccc',\n    strokeWidth: 2,\n  });\n\n  wedge.add(wedgeBackground);\n\n  const text = new Konva.Text({\n    text: reward,\n    fontFamily: 'Calibri',\n    fontSize: 50,\n    fill: 'white',\n    align: 'center',\n    stroke: 'yellow',\n    strokeWidth: 1,\n    rotation: (Math.PI + angle) / 2,\n    x: 380,\n    y: 30,\n    listening: false,\n  });\n\n  wedge.add(text);\n  text.cache();\n\n  wedge.startRotation = wedge.rotation();\n  wheel.add(wedge);\n}\n\nfunction animate(frame) {\n  // \u5904\u7406\u8f6e\u5b50\u65cb\u8f6c\n  const angularVelocityChange =\n    (angularVelocity * frame.timeDiff * (1 - angularFriction)) / 1000;\n  angularVelocity -= angularVelocityChange;\n\n  // \u6839\u636e\u70b9\u7684\u76f8\u4ea4\u6fc0\u6d3b/\u505c\u7528\u6954\n  const shape = stage.getIntersection({\n    x: stage.width() / 2,\n    y: 100,\n  });\n\n  if (controlled) {\n    if (angularVelocities.length > 10) {\n      angularVelocities.shift();\n    }\n\n    angularVelocities.push(\n      ((wheel.rotation() - lastRotation) * 1000) / frame.timeDiff\n    );\n  } else {\n    const diff = (frame.timeDiff * angularVelocity) / 1000;\n    if (diff > 0.0001) {\n      wheel.rotate(diff);\n    } else if (!finished && !controlled) {\n      if (shape) {\n        const text = shape.getParent().findOne('Text').text();\n        const price = text.split('\\n').join('');\n        alert('\u4f60\u7684\u5956\u54c1\u662f ' + price);\n      }\n      finished = true;\n    }\n  }\n  lastRotation = wheel.rotation();\n\n  if (shape && (!activeWedge || shape._id !== activeWedge._id)) {\n    pointer.y(20);\n\n    new Konva.Tween({\n      node: pointer,\n      duration: 0.3,\n      y: 30,\n      easing: Konva.Easings.ElasticEaseOut,\n    }).play();\n\n    if (activeWedge) {\n      activeWedge.fillPriority('radial-gradient');\n    }\n    shape.fillPriority('fill');\n    activeWedge = shape;\n  }\n}\n\nstage = new Konva.Stage({\n  container: 'container',\n  width: window.innerWidth,\n  height: 400,\n});\n\nlayer = new Konva.Layer();\nwheel = new Konva.Group({\n  x: stage.width() / 2,\n  y: 410,\n});\n\nfor (let n = 0; n < numWedges; n++) {\n  addWedge(n);\n}\n\npointer = new Konva.Wedge({\n  fillRadialGradientStartPoint: 0,\n  fillRadialGradientStartRadius: 0,\n  fillRadialGradientEndPoint: 0,\n  fillRadialGradientEndRadius: 30,\n  fillRadialGradientColorStops: [0, 'white', 1, 'red'],\n  stroke: 'white',\n  strokeWidth: 2,\n  lineJoin: 'round',\n  angle: 1,\n  radius: 30,\n  x: stage.width() / 2,\n  y: 33,\n  rotation: -90,\n  shadowColor: 'black',\n  shadowOffsetX: 3,\n  shadowOffsetY: 3,\n  shadowBlur: 2,\n  shadowOpacity: 0.5,\n});\n\n// \u5c06\u7ec4\u4ef6\u6dfb\u52a0\u5230\u821e\u53f0\nlayer.add(wheel);\nlayer.add(pointer);\nstage.add(layer);\n\n// \u7ed1\u5b9a\u4e8b\u4ef6\nwheel.on('mousedown touchstart', function (evt) {\n  angularVelocity = 0;\n  controlled = true;\n  target = evt.target;\n  finished = false;\n});\n\nstage.on('mouseup touchend', function () {\n  controlled = false;\n  angularVelocity = getAverageAngularVelocity() * 5;\n\n  if (angularVelocity > 20) {\n    angularVelocity = 20;\n  } else if (angularVelocity < -20) {\n    angularVelocity = -20;\n  }\n\n  angularVelocities.length = 0;\n});\n\nstage.on('mousemove touchmove', function () {\n  const mousePos = stage.getPointerPosition();\n  if (controlled && mousePos && target) {\n    const x = mousePos.x - wheel.getX();\n    const y = mousePos.y - wheel.getY();\n    const atan = Math.atan(y / x);\n    const rotation = x >= 0 ? atan : atan + Math.PI;\n\n    wheel.rotation(rotation);\n  }\n});\n\n// \u521b\u5efa\u52a8\u753b\nconst anim = new Konva.Animation(animate, layer);\nanim.start();\n"})})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>l});var a=t(96540);const o={},i=a.createContext(o);function r(n){const e=a.useContext(i);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),a.createElement(i.Provider,{value:e},n.children)}}}]);