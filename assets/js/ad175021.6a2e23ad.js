"use strict";(self.webpackChunkkonva_site_2=self.webpackChunkkonva_site_2||[]).push([[6947],{96592:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"docs/sandbox/Simple_Window_Frame","title":"HTML5 Canvas \u7b80\u5355\u7a97\u53e3\u8bbe\u8ba1\u5668","description":"\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5b83\u7ed8\u5236\u4e86\u4e00\u4e2a\u7a97\u53e3\u6846\u67b6\u3002","source":"@site/content/docs/sandbox/Simple_Window_Frame.mdx","sourceDirName":"docs/sandbox","slug":"/docs/sandbox/Simple_Window_Frame.html","permalink":"/docs/sandbox/Simple_Window_Frame.html","draft":false,"unlisted":false,"editUrl":"https://github.com/zhcndoc/konva/tree/main/content/docs/sandbox/Simple_Window_Frame.mdx","tags":[],"version":"current","frontMatter":{"title":"HTML5 Canvas \u7b80\u5355\u7a97\u53e3\u8bbe\u8ba1\u5668","sidebar_label":"\u7b80\u5355\u7a97\u53e3\u8bbe\u8ba1\u5668","hide_table_of_contents":true,"slug":"Simple_Window_Frame.html"},"sidebar":"tutorialsSidebar","previous":{"title":"\u5f62\u72b6\u5de5\u5177\u63d0\u793a","permalink":"/docs/sandbox/Shape_Tooltips.html"},"next":{"title":"\u821e\u53f0\u9884\u89c8","permalink":"/docs/sandbox/Stage_Preview.html"}}');var a=t(74848),r=t(28453),o=t(11470),s=t(19365);const l={title:"HTML5 Canvas \u7b80\u5355\u7a97\u53e3\u8bbe\u8ba1\u5668",sidebar_label:"\u7b80\u5355\u7a97\u53e3\u8bbe\u8ba1\u5668",hide_table_of_contents:!0,slug:"Simple_Window_Frame.html"},d=void 0,c={},h=[];function u(n){const e={code:"code",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5b83\u7ed8\u5236\u4e86\u4e00\u4e2a\u7a97\u53e3\u6846\u67b6\u3002"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"\u8bf4\u660e\uff1a"})," \u60a8\u53ef\u4ee5\u66f4\u6539\u5b83\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6"]}),"\n","\n",(0,a.jsxs)(o.A,{children:[(0,a.jsx)(s.A,{value:"Vanilla",default:!0,children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",metastring:"live vanilla",live:!0,children:"import Konva from 'konva';\n\nvar width = window.innerWidth;\nvar height = window.innerHeight;\n\nvar stage = new Konva.Stage({\n  container: 'container',\n  width: width,\n  height: height,\n});\n\nvar layer = new Konva.Layer();\nstage.add(layer);\n\nvar widthInput = document.createElement('input');\nwidthInput.type = 'number';\nwidthInput.value = '1000';\nvar widthLabel = document.createElement('span');\nwidthLabel.innerText = '\u5bbd\u5ea6: ';\nvar widthContainer = document.createElement('div');\nwidthContainer.style.float = 'left';\nwidthContainer.style.padding = '10px';\nwidthContainer.appendChild(widthLabel);\nwidthContainer.appendChild(widthInput);\n\nvar heightInput = document.createElement('input');\nheightInput.type = 'number';\nheightInput.value = '2000';\nvar heightLabel = document.createElement('span');\nheightLabel.innerText = '\u9ad8\u5ea6: ';\nvar heightContainer = document.createElement('div');\nheightContainer.style.float = 'left';\nheightContainer.style.padding = '10px';\nheightContainer.appendChild(heightLabel);\nheightContainer.appendChild(heightInput);\n\nvar controls = document.createElement('div');\ncontrols.style.position = 'absolute';\ncontrols.style.top = '4px';\ncontrols.style.left = '4px';\ncontrols.appendChild(widthContainer);\ncontrols.appendChild(heightContainer);\ndocument.body.appendChild(controls);\n\nfunction createFrame(frameWidth, frameHeight) {\n  var padding = 70;\n  var group = new Konva.Group();\n  var top = new Konva.Line({\n    points: [\n      0,\n      0,\n      frameWidth,\n      0,\n      frameWidth - padding,\n      padding,\n      padding,\n      padding,\n    ],\n    fill: 'white',\n  });\n\n  var left = new Konva.Line({\n    points: [\n      0,\n      0,\n      padding,\n      padding,\n      padding,\n      frameHeight - padding,\n      0,\n      frameHeight,\n    ],\n    fill: 'white',\n  });\n\n  var bottom = new Konva.Line({\n    points: [\n      0,\n      frameHeight,\n      padding,\n      frameHeight - padding,\n      frameWidth - padding,\n      frameHeight - padding,\n      frameWidth,\n      frameHeight,\n    ],\n    fill: 'white',\n  });\n\n  var right = new Konva.Line({\n    points: [\n      frameWidth,\n      0,\n      frameWidth,\n      frameHeight,\n      frameWidth - padding,\n      frameHeight - padding,\n      frameWidth - padding,\n      padding,\n    ],\n    fill: 'white',\n  });\n\n  var glass = new Konva.Rect({\n    x: padding,\n    y: padding,\n    width: frameWidth - padding * 2,\n    height: frameHeight - padding * 2,\n    fill: 'lightblue',\n  });\n\n  group.add(glass, top, left, bottom, right);\n\n  group.find('Line').forEach((line) => {\n    line.closed(true);\n    line.stroke('black');\n    line.strokeWidth(1);\n  });\n\n  return group;\n}\n\nfunction createInfo(frameWidth, frameHeight) {\n  var offset = 20;\n  var arrowOffset = offset / 2;\n  var arrowSize = 5;\n\n  var group = new Konva.Group();\n  var lines = new Konva.Shape({\n    sceneFunc: function (ctx) {\n      ctx.fillStyle = 'grey';\n      ctx.lineWidth = 0.5;\n\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-offset, 0);\n\n      ctx.moveTo(0, frameHeight);\n      ctx.lineTo(-offset, frameHeight);\n\n      ctx.moveTo(0, frameHeight);\n      ctx.lineTo(0, frameHeight + offset);\n\n      ctx.moveTo(frameWidth, frameHeight);\n      ctx.lineTo(frameWidth, frameHeight + offset);\n\n      ctx.stroke();\n    },\n  });\n\n  var leftArrow = new Konva.Shape({\n    sceneFunc: function (ctx) {\n      // \u9876\u90e8\u7bad\u5934\n      ctx.moveTo(-arrowOffset - arrowSize, arrowSize);\n      ctx.lineTo(-arrowOffset, 0);\n      ctx.lineTo(-arrowOffset + arrowSize, arrowSize);\n\n      // \u7ebf\n      ctx.moveTo(-arrowOffset, 0);\n      ctx.lineTo(-arrowOffset, frameHeight);\n\n      // \u5e95\u90e8\u7bad\u5934\n      ctx.moveTo(-arrowOffset - arrowSize, frameHeight - arrowSize);\n      ctx.lineTo(-arrowOffset, frameHeight);\n      ctx.lineTo(-arrowOffset + arrowSize, frameHeight - arrowSize);\n\n      ctx.strokeShape(this);\n    },\n    stroke: 'grey',\n    strokeWidth: 0.5,\n  });\n\n  var bottomArrow = new Konva.Shape({\n    sceneFunc: function (ctx) {\n      // \u9876\u90e8\u7bad\u5934\n      ctx.translate(0, frameHeight + arrowOffset);\n      ctx.moveTo(arrowSize, -arrowSize);\n      ctx.lineTo(0, 0);\n      ctx.lineTo(arrowSize, arrowSize);\n\n      // \u7ebf\n      ctx.moveTo(0, 0);\n      ctx.lineTo(frameWidth, 0);\n\n      // \u5e95\u90e8\u7bad\u5934\n      ctx.moveTo(frameWidth - arrowSize, -arrowSize);\n      ctx.lineTo(frameWidth, 0);\n      ctx.lineTo(frameWidth - arrowSize, arrowSize);\n\n      ctx.strokeShape(this);\n    },\n    stroke: 'grey',\n    strokeWidth: 0.5,\n  });\n\n  // \u5de6\u8fb9\u6587\u672c\n  var leftLabel = new Konva.Label();\n\n  leftLabel.add(\n    new Konva.Tag({\n      fill: 'white',\n      stroke: 'grey',\n    })\n  );\n  var leftText = new Konva.Text({\n    text: heightInput.value + 'mm',\n    padding: 2,\n    fill: 'black',\n  });\n\n  leftLabel.add(leftText);\n  leftLabel.position({\n    x: -arrowOffset - leftText.width(),\n    y: frameHeight / 2 - leftText.height() / 2,\n  });\n\n  leftLabel.on('click tap', function () {\n    createInput('height', this.getAbsolutePosition(), leftText.size());\n  });\n\n  // \u5e95\u90e8\u6587\u672c\n  var bottomLabel = new Konva.Label();\n\n  bottomLabel.add(\n    new Konva.Tag({\n      fill: 'white',\n      stroke: 'grey',\n    })\n  );\n  var bottomText = new Konva.Text({\n    text: widthInput.value + 'mm',\n    padding: 2,\n    fill: 'black',\n  });\n\n  bottomLabel.add(bottomText);\n  bottomLabel.position({\n    x: frameWidth / 2 - bottomText.width() / 2,\n    y: frameHeight + arrowOffset,\n  });\n\n  bottomLabel.on('click tap', function () {\n    createInput('width', this.getAbsolutePosition(), bottomText.size());\n  });\n\n  group.add(lines, leftArrow, bottomArrow, leftLabel, bottomLabel);\n\n  return group;\n}\n\nfunction createInput(metric, pos, size) {\n  var wrap = document.createElement('div');\n  wrap.style.position = 'absolute';\n  wrap.style.backgroundColor = 'rgba(0,0,0,0.1)';\n  wrap.style.top = 0;\n  wrap.style.left = 0;\n  wrap.style.width = '100%';\n  wrap.style.height = '100%';\n\n  document.body.appendChild(wrap);\n\n  var input = document.createElement('input');\n  input.type = 'number';\n\n  var similarInput = metric === 'width' ? widthInput : heightInput;\n  input.value = similarInput.value;\n\n  input.style.position = 'absolute';\n  input.style.top = pos.y + 3 + 'px';\n  input.style.left = pos.x + 'px';\n\n  input.style.height = size.height + 3 + 'px';\n  input.style.width = size.width + 3 + 'px';\n\n  wrap.appendChild(input);\n\n  input.addEventListener('change', function () {\n    similarInput.value = input.value;\n    updateCanvas();\n  });\n\n  input.addEventListener('input', function () {\n    similarInput.value = input.value;\n    updateCanvas();\n  });\n\n  wrap.addEventListener('click', function (e) {\n    if (e.target === wrap) {\n      document.body.removeChild(wrap);\n    }\n  });\n\n  input.addEventListener('keyup', function (e) {\n    if (e.key === 'Enter') {\n      document.body.removeChild(wrap);\n    }\n  });\n}\n\nfunction updateCanvas() {\n  layer.children.forEach((child) => child.destroy());\n\n  var frameWidth = parseInt(widthInput.value, 10);\n  var frameHeight = parseInt(heightInput.value, 10);\n\n  var wr = stage.width() / frameWidth;\n  var hr = stage.height() / frameHeight;\n\n  var ratio = Math.min(wr, hr) * 0.8;\n\n  var frameOnScreenWidth = frameWidth * ratio;\n  var frameOnScreenHeight = frameHeight * ratio;\n\n  var group = new Konva.Group({});\n\n  group.x(Math.round(stage.width() / 2 - frameOnScreenWidth / 2) + 0.5);\n  group.y(Math.round(stage.height() / 2 - frameOnScreenHeight / 2) + 0.5);\n\n  layer.add(group);\n\n  var frameGroup = createFrame(frameWidth, frameHeight);\n  frameGroup.scale({ x: ratio, y: ratio });\n  group.add(frameGroup);\n\n  var infoGroup = createInfo(frameOnScreenWidth, frameOnScreenHeight);\n  group.add(infoGroup);\n}\n\nwidthInput.addEventListener('change', updateCanvas);\nwidthInput.addEventListener('input', updateCanvas);\n\nheightInput.addEventListener('change', updateCanvas);\nheightInput.addEventListener('input', updateCanvas);\n\nupdateCanvas();\n"})})}),(0,a.jsx)(s.A,{value:"React",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",metastring:"live react",live:!0,children:"import { Stage, Layer, Group, Line, Rect, Shape, Label, Tag, Text } from 'react-konva';\nimport { useState, useEffect, useRef, useCallback, useMemo, useReducer } from 'react';\n\n// \u5e38\u91cf\nconst MIN_DIMENSION = 100;\nconst MAX_DIMENSION = 5000;\nconst DEFAULT_WIDTH = 1000;\nconst DEFAULT_HEIGHT = 2000;\nconst PADDING = 70;\n\n// \u7528\u4e8e\u7ef4\u5ea6\u72b6\u6001\u7684 reducer\nconst dimensionsReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_WIDTH':\n      return { ...state, width: Math.min(Math.max(parseInt(action.payload, 10) || MIN_DIMENSION, MIN_DIMENSION), MAX_DIMENSION) };\n    case 'SET_HEIGHT':\n      return { ...state, height: Math.min(Math.max(parseInt(action.payload, 10) || MIN_DIMENSION, MIN_DIMENSION), MAX_DIMENSION) };\n    default:\n      return state;\n  }\n};\n\n// \u7528\u4e8e\u7a97\u53e3\u5927\u5c0f\u7684\u81ea\u5b9a\u4e49\u94a9\u5b50\nconst useWindowSize = () => {\n  const [size, setSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  \n  useEffect(() => {\n    const handleResize = () => {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  \n  return size;\n};\n\n// \u7528\u4e8e\u8986\u76d6\u8f93\u5165\u7684\u81ea\u5b9a\u4e49\u94a9\u5b50\nconst useInputOverlay = (dimensions, dispatch) => {\n  const [overlay, setOverlay] = useState(null);\n  \n  // \u5904\u7406\u521b\u5efa\u8986\u76d6\u5c42\n  const createOverlay = useCallback((metric, position, size) => {\n    setOverlay({ metric, position, size });\n  }, []);\n  \n  // \u5904\u7406\u5173\u95ed\u8986\u76d6\u5c42\n  const closeOverlay = useCallback(() => {\n    setOverlay(null);\n  }, []);\n  \n  // \u5904\u7406\u8986\u76d6\u5c42\u6548\u679c\n  useEffect(() => {\n    if (!overlay) return;\n    \n    // \u521b\u5efa\u8986\u76d6\u5c42\u5143\u7d20\n    const wrap = document.createElement('div');\n    wrap.style.position = 'absolute';\n    wrap.style.backgroundColor = 'rgba(0,0,0,0.1)';\n    wrap.style.top = 0;\n    wrap.style.left = 0;\n    wrap.style.width = '100%';\n    wrap.style.height = '100%';\n    wrap.style.zIndex = 999;\n    wrap.setAttribute('aria-modal', 'true');\n    wrap.setAttribute('role', 'dialog');\n    \n    const input = document.createElement('input');\n    input.type = 'number';\n    input.min = MIN_DIMENSION;\n    input.max = MAX_DIMENSION;\n    input.value = overlay.metric === 'width' ? dimensions.width : dimensions.height;\n    input.style.position = 'absolute';\n    input.style.top = `${overlay.position.y + 3}px`;\n    input.style.left = `${overlay.position.x}px`;\n    input.style.width = `${overlay.size.width + 3}px`;\n    input.style.height = `${overlay.size.height + 3}px`;\n    input.setAttribute('aria-label', `\u7f16\u8f91 ${overlay.metric}`);\n    \n    wrap.appendChild(input);\n    document.body.appendChild(wrap);\n    \n    // \u5904\u7406\u8f93\u5165\u53d8\u5316\n    const handleChange = () => {\n      const value = input.value;\n      dispatch({\n        type: overlay.metric === 'width' ? 'SET_WIDTH' : 'SET_HEIGHT',\n        payload: value\n      });\n    };\n    \n    // \u5904\u7406\u70b9\u51fb\u5916\u90e8\n    const handleWrapClick = (e) => {\n      if (e.target === wrap) {\n        closeOverlay();\n        document.body.removeChild(wrap);\n      }\n    };\n    \n    // \u5904\u7406\u952e\u76d8\u4e8b\u4ef6\n    const handleKeyUp = (e) => {\n      if (e.key === 'Enter' || e.key === 'Escape') {\n        closeOverlay();\n        document.body.removeChild(wrap);\n      }\n    };\n    \n    input.addEventListener('change', handleChange);\n    input.addEventListener('input', handleChange);\n    wrap.addEventListener('click', handleWrapClick);\n    input.addEventListener('keyup', handleKeyUp);\n    window.addEventListener('keyup', handleKeyUp);\n    \n    // \u7126\u70b9\u5230\u8f93\u5165\u6846\n    input.focus();\n    \n    // \u6e05\u7406\u5de5\u4f5c\n    return () => {\n      input.removeEventListener('change', handleChange);\n      input.removeEventListener('input', handleChange);\n      wrap.removeEventListener('click', handleWrapClick);\n      input.removeEventListener('keyup', handleKeyUp);\n      window.removeEventListener('keyup', handleKeyUp);\n      \n      if (document.body.contains(wrap)) {\n        document.body.removeChild(wrap);\n      }\n    };\n  }, [overlay, dimensions, dispatch, closeOverlay]);\n  \n  return { createOverlay, closeOverlay };\n};\n\n// WindowFrame \u7ec4\u4ef6\u7528\u4e8e\u5b9e\u9645\u6846\u67b6\u6e32\u67d3\nconst WindowFrame = ({ width, height }) => {\n  // \u4e3a\u6bcf\u4e00\u4fa7\u6846\u67b6\u751f\u6210\u70b9\n  const framePoints = useMemo(() => ({\n    top: [0, 0, width, 0, width - PADDING, PADDING, PADDING, PADDING],\n    left: [0, 0, PADDING, PADDING, PADDING, height - PADDING, 0, height],\n    bottom: [0, height, PADDING, height - PADDING, width - PADDING, height - PADDING, width, height],\n    right: [width, 0, width, height, width - PADDING, height - PADDING, width - PADDING, PADDING]\n  }), [width, height]);\n  \n  return (\n    <Group>\n      {/* \u73bb\u7483\u9762\u677f */}\n      <Rect\n        x={PADDING}\n        y={PADDING}\n        width={width - PADDING * 2}\n        height={height - PADDING * 2}\n        fill=\"lightblue\"\n      />\n      \n      {/* \u6846\u67b6\u4fa7\u9762 */}\n      {Object.entries(framePoints).map(([key, points]) => (\n        <Line\n          key={key}\n          points={points}\n          fill=\"white\"\n          closed={true}\n          stroke=\"black\"\n          strokeWidth={1}\n        />\n      ))}\n    </Group>\n  );\n};\n\n// MeasurementInfo \u7ec4\u4ef6\u7528\u4e8e\u5c3a\u5bf8\u548c\u7bad\u5934\nconst MeasurementInfo = ({ width, height, dimensions, createOverlay }) => {\n  const offset = 20;\n  const arrowOffset = offset / 2;\n  const arrowSize = 5;\n  \n  // \u5904\u7406\u6807\u7b7e\u70b9\u51fb\n  const handleLabelClick = useCallback((metric, e) => {\n    const pos = e.target.getAbsolutePosition();\n    const size = e.target.getSize();\n    createOverlay(metric, pos, size);\n  }, [createOverlay]);\n  \n  return (\n    <Group>\n      {/* \u6307\u5bfc\u7ebf */}\n      <Shape\n        sceneFunc={(ctx, shape) => {\n          ctx.fillStyle = 'grey';\n          ctx.lineWidth = 0.5;\n          \n          ctx.moveTo(0, 0);\n          ctx.lineTo(-offset, 0);\n          \n          ctx.moveTo(0, height);\n          ctx.lineTo(-offset, height);\n          \n          ctx.moveTo(0, height);\n          ctx.lineTo(0, height + offset);\n          \n          ctx.moveTo(width, height);\n          ctx.lineTo(width, height + offset);\n          \n          ctx.stroke();\n        }}\n      />\n      \n      {/* \u5de6\u7bad\u5934\uff08\u9ad8\u5ea6\uff09 */}\n      <Shape\n        sceneFunc={(ctx, shape) => {\n          // \u9876\u90e8\u6307\u9488\n          ctx.moveTo(-arrowOffset - arrowSize, arrowSize);\n          ctx.lineTo(-arrowOffset, 0);\n          ctx.lineTo(-arrowOffset + arrowSize, arrowSize);\n          \n          // \u7ebf\n          ctx.moveTo(-arrowOffset, 0);\n          ctx.lineTo(-arrowOffset, height);\n          \n          // \u5e95\u90e8\u6307\u9488\n          ctx.moveTo(-arrowOffset - arrowSize, height - arrowSize);\n          ctx.lineTo(-arrowOffset, height);\n          ctx.lineTo(-arrowOffset + arrowSize, height - arrowSize);\n          \n          ctx.strokeShape(shape);\n        }}\n        stroke=\"grey\"\n        strokeWidth={0.5}\n      />\n      \n      {/* \u5e95\u90e8\u7bad\u5934\uff08\u5bbd\u5ea6\uff09 */}\n      <Shape\n        sceneFunc={(ctx, shape) => {\n          // translate for bottom arrow\n          ctx.translate(0, height + arrowOffset);\n          \n          // \u5de6\u6307\u9488\n          ctx.moveTo(arrowSize, -arrowSize);\n          ctx.lineTo(0, 0);\n          ctx.lineTo(arrowSize, arrowSize);\n\n          // \u7ebf\n          ctx.moveTo(0, 0);\n          ctx.lineTo(width, 0);\n\n          // \u53f3\u6307\u9488\n          ctx.moveTo(width - arrowSize, -arrowSize);\n          ctx.lineTo(width, 0);\n          ctx.lineTo(width - arrowSize, arrowSize);\n\n          ctx.strokeShape(shape);\n        }}\n        stroke=\"grey\"\n        strokeWidth={0.5}\n      />\n      \n      {/* \u9ad8\u5ea6\u6807\u7b7e */}\n      <Label\n        x={-arrowOffset - 40}\n        y={height / 2 - 10}\n        onClick={(e) => handleLabelClick('height', e)}\n      >\n        <Tag\n          fill=\"white\"\n          stroke=\"grey\"\n          cornerRadius={2}\n        />\n        <Text\n          text={`${dimensions.height}mm`}\n          padding={2}\n          fill=\"black\"\n          fontStyle=\"bold\"\n        />\n      </Label>\n      \n      {/* \u5bbd\u5ea6\u6807\u7b7e */}\n      <Label\n        x={width / 2 - 20}\n        y={height + arrowOffset}\n        onClick={(e) => handleLabelClick('width', e)}\n      >\n        <Tag\n          fill=\"white\"\n          stroke=\"grey\"\n          cornerRadius={2}\n        />\n        <Text\n          text={`${dimensions.width}mm`}\n          padding={2}\n          fill=\"black\"\n          fontStyle=\"bold\"\n        />\n      </Label>\n    </Group>\n  );\n};\n\n// DimensionControls \u7ec4\u4ef6\u7528\u4e8e\u8f93\u5165\u5b57\u6bb5\nconst DimensionControls = ({ dimensions, dispatch }) => {\n  // \u6837\u5f0f\n  const inputStyle = {\n    float: 'left',\n    padding: '10px'\n  };\n  \n  const controlsStyle = {\n    position: 'absolute',\n    top: '4px',\n    left: '4px'\n  };\n  \n  // \u5904\u7406\u8f93\u5165\u53d8\u5316\n  const handleInputChange = useCallback((e, type) => {\n    dispatch({\n      type: type === 'width' ? 'SET_WIDTH' : 'SET_HEIGHT',\n      payload: e.target.value\n    });\n  }, [dispatch]);\n  \n  return (\n    <div style={controlsStyle}>\n      <div style={inputStyle}>\n        \u5bbd\u5ea6:\n        <input \n          type=\"number\"\n          value={dimensions.width}\n          onChange={(e) => handleInputChange(e, 'width')}\n          min={MIN_DIMENSION}\n          max={MAX_DIMENSION}\n          aria-label=\"\u7a97\u53e3\u5bbd\u5ea6\"\n        />\n      </div>\n      <div style={inputStyle}>\n        \u9ad8\u5ea6:\n        <input \n          type=\"number\"\n          value={dimensions.height}\n          onChange={(e) => handleInputChange(e, 'height')}\n          min={MIN_DIMENSION}\n          max={MAX_DIMENSION}\n          aria-label=\"\u7a97\u53e3\u9ad8\u5ea6\"\n        />\n      </div>\n    </div>\n  );\n};\n\n// \u4e3b\u5e94\u7528\u7ec4\u4ef6\nconst App = () => {\n  // \u72b6\u6001\n  const [dimensions, dispatch] = useReducer(dimensionsReducer, {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT\n  });\n  \n  // \u83b7\u53d6\u7a97\u53e3\u5927\u5c0f\n  const windowSize = useWindowSize();\n  \n  // \u8bbe\u7f6e\u8986\u76d6\u7ba1\u7406\n  const { createOverlay } = useInputOverlay(dimensions, dispatch);\n  \n  // \u8ba1\u7b97\u6846\u67b6\u4f4d\u7f6e\n  const frameCalculation = useMemo(() => {\n    const { width, height } = dimensions;\n    const wr = windowSize.width / width;\n    const hr = windowSize.height / height;\n    \n    const ratio = Math.min(wr, hr) * 0.8;\n    \n    const frameOnScreenWidth = width * ratio;\n    const frameOnScreenHeight = height * ratio;\n    \n    const x = Math.round(windowSize.width / 2 - frameOnScreenWidth / 2) + 0.5;\n    const y = Math.round(windowSize.height / 2 - frameOnScreenHeight / 2) + 0.5;\n    \n    return {\n      scale: ratio,\n      position: { x, y },\n      screenWidth: frameOnScreenWidth,\n      screenHeight: frameOnScreenHeight\n    };\n  }, [dimensions, windowSize]);\n  \n  return (\n    <div \n      style={{ position: 'relative', width: '100%', height: '100%' }}\n      role=\"application\"\n      aria-label=\"\u7a97\u53e3\u6846\u67b6\u8bbe\u8ba1\u5668\"\n    >\n      \n      {/* \u753b\u5e03 */}\n      <Stage \n        width={windowSize.width} \n        height={windowSize.height}\n      >\n        <Layer>\n          <Group\n            x={frameCalculation.position.x}\n            y={frameCalculation.position.y}\n          >\n            {/* \u7f29\u653e\u540e\u7684\u7a97\u53e3\u6846\u67b6 */}\n            <Group scale={{ x: frameCalculation.scale, y: frameCalculation.scale }}>\n              <WindowFrame \n                width={dimensions.width} \n                height={dimensions.height} \n              />\n            </Group>\n            \n            {/* \u6d4b\u91cf\u4fe1\u606f */}\n            <MeasurementInfo \n              width={frameCalculation.screenWidth}\n              height={frameCalculation.screenHeight}\n              dimensions={dimensions}\n              createOverlay={createOverlay}\n            />\n          </Group>\n        </Layer>\n      </Stage>\n            {/* \u8f93\u5165\u63a7\u4ef6 */}\n      <DimensionControls \n        dimensions={dimensions} \n        dispatch={dispatch} \n      />\n    </div>\n  );\n};\n\nexport default App;\n"})})}),(0,a.jsx)(s.A,{value:"Vue",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",metastring:"live vue",live:!0,children:"<template>\n  <div ref=\"containerRef\" style=\"position: relative; width: 100%; height: 100%\">\n    <div :style=\"controlsStyle\">\n      <div :style=\"inputStyle\">\n        \u5bbd\u5ea6:\n        <input \n          type=\"number\"\n          v-model=\"dimensions.width\"\n          @input=\"updateCanvas\"\n        />\n      </div>\n      <div :style=\"inputStyle\">\n        \u9ad8\u5ea6:\n        <input \n          type=\"number\"\n          v-model=\"dimensions.height\"\n          @input=\"updateCanvas\"\n        />\n      </div>\n    </div>\n    \n    <v-stage :config=\"stageConfig\">\n      <v-layer>\n        <v-group :config=\"mainGroupConfig\">\n          <v-group :config=\"frameScaleConfig\">\n            <v-rect :config=\"glassConfig\" />\n            <v-line\n              v-for=\"(line, i) in frameLines\"\n              :key=\"i\"\n              :config=\"line\"\n            />\n          </v-group>\n          \n          \x3c!-- \u4fe1\u606f\u5143\u7d20 --\x3e\n          <v-shape :config=\"linesConfig\" />\n          <v-shape :config=\"leftArrowConfig\" />\n          <v-shape :config=\"bottomArrowConfig\" />\n          \n          \x3c!-- \u6807\u7b7e --\x3e\n          <v-label :config=\"heightLabelConfig\" @click=\"handleLabelClick('height', $event)\">\n            <v-tag :config=\"tagConfig\" />\n            <v-text :config=\"heightTextConfig\" />\n          </v-label>\n          \n          <v-label :config=\"widthLabelConfig\" @click=\"handleLabelClick('width', $event)\">\n            <v-tag :config=\"tagConfig\" />\n            <v-text :config=\"widthTextConfig\" />\n          </v-label>\n        </v-group>\n      </v-layer>\n    </v-stage>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, reactive, onMounted, onBeforeUnmount, watch } from 'vue';\n\nconst containerRef = ref(null);\nconst stageSize = reactive({\n  width: window.innerWidth,\n  height: window.innerHeight\n});\n\nconst dimensions = reactive({\n  width: 1000,\n  height: 2000\n});\n\nconst inputOverlay = ref(null);\n\nconst padding = 70;\nconst offset = 20;\nconst arrowOffset = offset / 2;\nconst arrowSize = 5;\n\n// \u6837\u5f0f\u5bf9\u8c61\nconst inputStyle = {\n  float: 'left',\n  padding: '10px'\n};\n\nconst controlsStyle = {\n  position: 'absolute',\n  top: '4px',\n  left: '4px',\n  zIndex: 100\n};\n\n// \u7a97\u53e3\u6846\u67b6\u8ba1\u7b97\nconst frameCalculation = computed(() => {\n  const wr = stageSize.width / dimensions.width;\n  const hr = stageSize.height / dimensions.height;\n\n  const ratio = Math.min(wr, hr) * 0.8;\n\n  const frameOnScreenWidth = dimensions.width * ratio;\n  const frameOnScreenHeight = dimensions.height * ratio;\n\n  const x = Math.round(stageSize.width / 2 - frameOnScreenWidth / 2) + 0.5;\n  const y = Math.round(stageSize.height / 2 - frameOnScreenHeight / 2) + 0.5;\n\n  return {\n    scale: ratio,\n    position: { x, y },\n    screenWidth: frameOnScreenWidth,\n    screenHeight: frameOnScreenHeight\n  };\n});\n\n// \u753b\u5e03\u914d\u7f6e\nconst stageConfig = computed(() => ({\n  width: stageSize.width,\n  height: stageSize.height\n}));\n\n// \u4e3b\u7ec4\nconst mainGroupConfig = computed(() => ({\n  x: frameCalculation.value.position.x,\n  y: frameCalculation.value.position.y\n}));\n\n// \u6846\u67b6\u7f29\u653e\u7ec4\nconst frameScaleConfig = computed(() => ({\n  scaleX: frameCalculation.value.scale,\n  scaleY: frameCalculation.value.scale\n}));\n\n// \u73bb\u7483\u914d\u7f6e\nconst glassConfig = computed(() => ({\n  x: padding,\n  y: padding,\n  width: dimensions.width - padding * 2,\n  height: dimensions.height - padding * 2,\n  fill: 'lightblue'\n}));\n\n// \u6846\u67b6\u7ebf\nconst frameLines = computed(() => [\n  // \u9876\u90e8\u7ebf\n  {\n    points: [\n      0, 0,\n      dimensions.width, 0,\n      dimensions.width - padding, padding,\n      padding, padding\n    ],\n    fill: 'white',\n    closed: true,\n    stroke: 'black',\n    strokeWidth: 1\n  },\n  // \u5de6\u4fa7\u7ebf\n  {\n    points: [\n      0, 0,\n      padding, padding,\n      padding, dimensions.height - padding,\n      0, dimensions.height\n    ],\n    fill: 'white',\n    closed: true,\n    stroke: 'black',\n    strokeWidth: 1\n  },\n  // \u5e95\u90e8\u7ebf\n  {\n    points: [\n      0, dimensions.height,\n      padding, dimensions.height - padding,\n      dimensions.width - padding, dimensions.height - padding,\n      dimensions.width, dimensions.height\n    ],\n    fill: 'white',\n    closed: true,\n    stroke: 'black',\n    strokeWidth: 1\n  },\n  // \u53f3\u4fa7\u7ebf\n  {\n    points: [\n      dimensions.width, 0,\n      dimensions.width, dimensions.height,\n      dimensions.width - padding, dimensions.height - padding,\n      dimensions.width - padding, padding\n    ],\n    fill: 'white',\n    closed: true,\n    stroke: 'black',\n    strokeWidth: 1\n  }\n]);\n\n// \u4fe1\u606f\u5143\u7d20\nconst linesConfig = computed(() => ({\n  sceneFunc: function(ctx, shape) {\n    const frameWidth = frameCalculation.value.screenWidth;\n    const frameHeight = frameCalculation.value.screenHeight;\n    \n    ctx.fillStyle = 'grey';\n    ctx.lineWidth = 0.5;\n\n    ctx.moveTo(0, 0);\n    ctx.lineTo(-offset, 0);\n\n    ctx.moveTo(0, frameHeight);\n    ctx.lineTo(-offset, frameHeight);\n\n    ctx.moveTo(0, frameHeight);\n    ctx.lineTo(0, frameHeight + offset);\n\n    ctx.moveTo(frameWidth, frameHeight);\n    ctx.lineTo(frameWidth, frameHeight + offset);\n\n    ctx.stroke();\n  }\n}));\n\nconst leftArrowConfig = computed(() => ({\n  sceneFunc: function(ctx, shape) {\n    const frameHeight = frameCalculation.value.screenHeight;\n    \n    // \u9876\u90e8\u6307\u9488\n    ctx.moveTo(-arrowOffset - arrowSize, arrowSize);\n    ctx.lineTo(-arrowOffset, 0);\n    ctx.lineTo(-arrowOffset + arrowSize, arrowSize);\n\n    // \u7ebf\n    ctx.moveTo(-arrowOffset, 0);\n    ctx.lineTo(-arrowOffset, frameHeight);\n\n    // \u5e95\u90e8\u6307\u9488\n    ctx.moveTo(-arrowOffset - arrowSize, frameHeight - arrowSize);\n    ctx.lineTo(-arrowOffset, frameHeight);\n    ctx.lineTo(-arrowOffset + arrowSize, frameHeight - arrowSize);\n\n    ctx.strokeShape(shape);\n  },\n  stroke: 'grey',\n  strokeWidth: 0.5\n}));\n\nconst bottomArrowConfig = computed(() => ({\n  sceneFunc: function(ctx, shape) {\n    const frameWidth = frameCalculation.value.screenWidth;\n    const frameHeight = frameCalculation.value.screenHeight;\n    \n    // translate for bottom arrow\n    ctx.translate(0, frameHeight + arrowOffset);\n    \n    // \u5de6\u6307\u9488\n    ctx.moveTo(arrowSize, -arrowSize);\n    ctx.lineTo(0, 0);\n    ctx.lineTo(arrowSize, arrowSize);\n\n    // \u7ebf\n    ctx.moveTo(0, 0);\n    ctx.lineTo(frameWidth, 0);\n\n    // \u53f3\u6307\u9488\n    ctx.moveTo(frameWidth - arrowSize, -arrowSize);\n    ctx.lineTo(frameWidth, 0);\n    ctx.lineTo(frameWidth - arrowSize, arrowSize);\n\n    ctx.strokeShape(shape);\n  },\n  stroke: 'grey',\n  strokeWidth: 0.5\n}));\n\n// \u6807\u7b7e\u914d\u7f6e\nconst tagConfig = {\n  fill: 'white',\n  stroke: 'grey'\n};\n\nconst heightLabelConfig = computed(() => ({\n  x: -arrowOffset - 40,\n  y: frameCalculation.value.screenHeight / 2 - 10\n}));\n\nconst heightTextConfig = computed(() => ({\n  text: `${dimensions.height}mm`,\n  padding: 2,\n  fill: 'black'\n}));\n\nconst widthLabelConfig = computed(() => ({\n  x: frameCalculation.value.screenWidth / 2 - 20,\n  y: frameCalculation.value.screenHeight + arrowOffset\n}));\n\nconst widthTextConfig = computed(() => ({\n  text: `${dimensions.width}mm`,\n  padding: 2,\n  fill: 'black'\n}));\n\n// \u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\nconst handleLabelClick = (metric, e) => {\n  const pos = e.target.getAbsolutePosition();\n  const size = { width: 50, height: 20 }; // \u8fd1\u4f3c\u5927\u5c0f\n  \n  createInputOverlay(metric, pos, size);\n};\n\nconst createInputOverlay = (metric, pos, size) => {\n  // \u521b\u5efa\u8986\u76d6\u5c42\n  const wrap = document.createElement('div');\n  wrap.style.position = 'absolute';\n  wrap.style.backgroundColor = 'rgba(0,0,0,0.1)';\n  wrap.style.top = 0;\n  wrap.style.left = 0;\n  wrap.style.width = '100%';\n  wrap.style.height = '100%';\n  wrap.style.zIndex = 999;\n\n  const input = document.createElement('input');\n  input.type = 'number';\n  input.value = metric === 'width' ? dimensions.width : dimensions.height;\n  input.style.position = 'absolute';\n  input.style.top = `${pos.y + 3}px`;\n  input.style.left = `${pos.x}px`;\n  input.style.width = `${size.width + 3}px`;\n  input.style.height = `${size.height + 3}px`;\n\n  wrap.appendChild(input);\n  document.body.appendChild(wrap);\n\n  const handleChange = () => {\n    const value = parseInt(input.value, 10);\n    dimensions[metric] = value;\n  };\n\n  input.addEventListener('change', handleChange);\n  input.addEventListener('input', handleChange);\n\n  const handleWrapClick = (e) => {\n    if (e.target === wrap) {\n      document.body.removeChild(wrap);\n    }\n  };\n\n  const handleKeyUp = (e) => {\n    if (e.key === 'Enter') {\n      document.body.removeChild(wrap);\n    }\n  };\n\n  wrap.addEventListener('click', handleWrapClick);\n  input.addEventListener('keyup', handleKeyUp);\n\n  input.focus();\n};\n\n// \u7a97\u53e3\u8c03\u6574\u5927\u5c0f\u5904\u7406\u7a0b\u5e8f\nconst handleResize = () => {\n  stageSize.width = window.innerWidth;\n  stageSize.height = window.innerHeight;\n};\n\n// \u8bbe\u7f6e\u548c\u6e05\u7406\nonMounted(() => {\n  window.addEventListener('resize', handleResize);\n});\n\nonBeforeUnmount(() => {\n  window.removeEventListener('resize', handleResize);\n  \n  // \u6e05\u7406\u4efb\u4f55\u8f93\u5165\u8986\u76d6\u5c42\n  if (inputOverlay.value) {\n    if (document.body.contains(inputOverlay.value.wrap)) {\n      document.body.removeChild(inputOverlay.value.wrap);\n    }\n  }\n});\n\nconst updateCanvas = () => {\n  // \u8fd9\u7531 Vue \u53cd\u5e94\u5f0f\u5730\u5904\u7406\n};\n<\/script>\n"})})})]})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(u,{...n})}):u(n)}},19365:(n,e,t)=>{t.d(e,{A:()=>o});t(96540);var i=t(34164);const a={tabItem:"tabItem_Ymn6"};var r=t(74848);function o(n){let{children:e,hidden:t,className:o}=n;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(a.tabItem,o),hidden:t,children:e})}},11470:(n,e,t)=>{t.d(e,{A:()=>S});var i=t(96540),a=t(34164),r=t(23104),o=t(56347),s=t(205),l=t(57485),d=t(31682),c=t(70679);function h(n){return i.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,i.isValidElement)(n)&&function(n){const{props:e}=n;return!!e&&"object"==typeof e&&"value"in e}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(n){const{values:e,children:t}=n;return(0,i.useMemo)((()=>{const n=e??function(n){return h(n).map((n=>{let{props:{value:e,label:t,attributes:i,default:a}}=n;return{value:e,label:t,attributes:i,default:a}}))}(t);return function(n){const e=(0,d.XI)(n,((n,e)=>n.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[e,t])}function p(n){let{value:e,tabValues:t}=n;return t.some((n=>n.value===e))}function f(n){let{queryString:e=!1,groupId:t}=n;const a=(0,o.W6)(),r=function(n){let{queryString:e=!1,groupId:t}=n;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,l.aZ)(r),(0,i.useCallback)((n=>{if(!r)return;const e=new URLSearchParams(a.location.search);e.set(r,n),a.replace({...a.location,search:e.toString()})}),[r,a])]}function m(n){const{defaultValue:e,queryString:t=!1,groupId:a}=n,r=u(n),[o,l]=(0,i.useState)((()=>function(n){let{defaultValue:e,tabValues:t}=n;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const i=t.find((n=>n.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:e,tabValues:r}))),[d,h]=f({queryString:t,groupId:a}),[m,g]=function(n){let{groupId:e}=n;const t=function(n){return n?`docusaurus.tab.${n}`:null}(e),[a,r]=(0,c.Dv)(t);return[a,(0,i.useCallback)((n=>{t&&r.set(n)}),[t,r])]}({groupId:a}),w=(()=>{const n=d??m;return p({value:n,tabValues:r})?n:null})();(0,s.A)((()=>{w&&l(w)}),[w]);return{selectedValue:o,selectValue:(0,i.useCallback)((n=>{if(!p({value:n,tabValues:r}))throw new Error(`Can't select invalid tab value=${n}`);l(n),h(n),g(n)}),[h,g,r]),tabValues:r}}var g=t(92303);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(74848);function x(n){let{className:e,block:t,selectedValue:i,selectValue:o,tabValues:s}=n;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.a_)(),c=n=>{const e=n.currentTarget,t=l.indexOf(e),a=s[t].value;a!==i&&(d(e),o(a))},h=n=>{let e=null;switch(n.key){case"Enter":c(n);break;case"ArrowRight":{const t=l.indexOf(n.currentTarget)+1;e=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(n.currentTarget)-1;e=l[t]??l[l.length-1];break}}e?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},e),children:s.map((n=>{let{value:e,label:t,attributes:r}=n;return(0,v.jsx)("li",{role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,ref:n=>l.push(n),onKeyDown:h,onClick:c,...r,className:(0,a.A)("tabs__item",w.tabItem,r?.className,{"tabs__item--active":i===e}),children:t??e},e)}))})}function y(n){let{lazy:e,children:t,selectedValue:r}=n;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const n=o.find((n=>n.props.value===r));return n?(0,i.cloneElement)(n,{className:(0,a.A)("margin-top--md",n.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:o.map(((n,e)=>(0,i.cloneElement)(n,{key:e,hidden:n.props.value!==r})))})}function b(n){const e=m(n);return(0,v.jsxs)("div",{className:(0,a.A)("tabs-container",w.tabList),children:[(0,v.jsx)(x,{...e,...n}),(0,v.jsx)(y,{...e,...n})]})}function S(n){const e=(0,g.A)();return(0,v.jsx)(b,{...n,children:h(n.children)},String(e))}},28453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>s});var i=t(96540);const a={},r=i.createContext(a);function o(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);