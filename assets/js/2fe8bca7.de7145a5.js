"use strict";(self.webpackChunkkonva_site_2=self.webpackChunkkonva_site_2||[]).push([[4265],{54160:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"docs/drag_and_drop/Drop_Events","title":"HTML5 Canvas \u62d6\u653e\u4e8b\u4ef6","description":"Konva \u4e0d\u652f\u6301\u62d6\u653e\u4e8b\u4ef6\u3002\u4f46\u4f60\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u62d6\u653e\u4e8b\u4ef6\u68c0\u6d4b\u3002","source":"@site/content/docs/drag_and_drop/09_Drop_Events.mdx","sourceDirName":"docs/drag_and_drop","slug":"/docs/drag_and_drop/Drop_Events.html","permalink":"/docs/drag_and_drop/Drop_Events.html","draft":false,"unlisted":false,"editUrl":"https://github.com/zhcndoc/konva/tree/main/content/docs/drag_and_drop/09_Drop_Events.mdx","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"title":"HTML5 Canvas \u62d6\u653e\u4e8b\u4ef6","sidebar_label":"\u62d6\u653e\u4e8b\u4ef6","hide_table_of_contents":true,"slug":"Drop_Events.html"},"sidebar":"tutorialsSidebar","previous":{"title":"\u590d\u6742\u62d6\u653e","permalink":"/docs/drag_and_drop/Complex_Drag_and_Drop.html"},"next":{"title":"\u57fa\u672c\u6f14\u793a","permalink":"/docs/select_and_transform/Basic_demo.html"}}');var r=t(74848),s=t(28453),o=t(11470),i=t(19365);const l={title:"HTML5 Canvas \u62d6\u653e\u4e8b\u4ef6",sidebar_label:"\u62d6\u653e\u4e8b\u4ef6",hide_table_of_contents:!0,slug:"Drop_Events.html"},u=void 0,d={},c=[];function p(e){const n={code:"code",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Konva \u4e0d\u652f\u6301\u62d6\u653e\u4e8b\u4ef6\u3002\u4f46\u4f60\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u62d6\u653e\u4e8b\u4ef6\u68c0\u6d4b\u3002\n\u8981\u68c0\u6d4b\u62d6\u653e\u76ee\u6807\u5f62\u72b6\uff0c\u4f60\u5fc5\u987b\u5c06\u62d6\u52a8\u7684\u5bf9\u8c61\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u5c42\u4e2d\u3002"}),"\n",(0,r.jsxs)(n.p,{children:["\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230 ",(0,r.jsx)(n.code,{children:"drop"}),"\u3001",(0,r.jsx)(n.code,{children:"dragenter"}),"\u3001",(0,r.jsx)(n.code,{children:"dragleave"}),"\u3001",(0,r.jsx)(n.code,{children:"dragover"})," \u4e8b\u4ef6\u7684\u5b9e\u73b0\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\u8bf4\u660e\uff1a"})," \u62d6\u52a8\u4e00\u4e2a\u5f62\u72b6\u5230\u53e6\u4e00\u4e2a\u5f62\u72b6\u4e0a\u3002\u6216\u62d6\u52a8\u5e76\u653e\u4e0b\u4e00\u4e2a\u5f62\u72b6\u5230\u53e6\u4e00\u4e2a\u5f62\u72b6\u4e2d\u3002"]}),"\n","\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(i.A,{value:"Vanilla",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"live vanilla",live:!0,children:"import Konva from 'konva';\n\nconst stage = new Konva.Stage({\n  container: 'container',\n  width: window.innerWidth,\n  height: window.innerHeight,\n});\n\nconst layer = new Konva.Layer();\nconst tempLayer = new Konva.Layer();\nstage.add(layer);\nstage.add(tempLayer);\n\nconst text = new Konva.Text({\n  fill: 'black',\n});\nlayer.add(text);\n\nlet previousShape;\n\n// \u521b\u5efa\u591a\u4e2a\u661f\u661f\nfor (let i = 0; i < 10; i++) {\n  const star = new Konva.Star({\n    x: stage.width() * Math.random(),\n    y: stage.height() * Math.random(),\n    fill: 'blue',\n    numPoints: 10,\n    innerRadius: 20,\n    outerRadius: 25,\n    draggable: true,\n    name: 'star ' + i,\n    shadowOffsetX: 5,\n    shadowOffsetY: 5,\n  });\n\n  star.on('dragstart', () => {\n    star.moveTo(tempLayer);\n    text.text('Moving ' + star.name());\n    layer.draw();\n  });\n\n  star.on('dragmove', (e) => {\n    const pos = stage.getPointerPosition();\n    const shape = layer.getIntersection(pos);\n\n    if (previousShape && shape) {\n      if (previousShape !== shape) {\n        // \u79bb\u5f00\u65e7\u76ee\u6807\n        previousShape.fire('dragleave', { evt: e.evt }, true);\n        // \u8fdb\u5165\u65b0\u76ee\u6807\n        shape.fire('dragenter', { evt: e.evt }, true);\n        previousShape = shape;\n      } else {\n        previousShape.fire('dragover', { evt: e.evt }, true);\n      }\n    } else if (!previousShape && shape) {\n      previousShape = shape;\n      shape.fire('dragenter', { evt: e.evt }, true);\n    } else if (previousShape && !shape) {\n      previousShape.fire('dragleave', { evt: e.evt }, true);\n      previousShape = undefined;\n    }\n    layer.draw();\n  });\n\n  star.on('dragend', (e) => {\n    const pos = stage.getPointerPosition();\n    const shape = layer.getIntersection(pos);\n    if (shape) {\n      previousShape.fire('drop', { evt: e.evt }, true);\n    }\n    previousShape = undefined;\n    star.moveTo(layer);\n    layer.draw();\n  });\n\n  star.on('dragenter', () => {\n    star.fill('green');\n    text.text('dragenter ' + star.name());\n    layer.draw();\n  });\n\n  star.on('dragleave', () => {\n    star.fill('blue');\n    text.text('dragleave ' + star.name());\n    layer.draw();\n  });\n\n  star.on('dragover', () => {\n    text.text('dragover ' + star.name());\n    layer.draw();\n  });\n\n  star.on('drop', () => {\n    star.fill('red');\n    text.text('drop ' + star.name());\n    layer.draw();\n  });\n\n  layer.add(star);\n}\n\nlayer.draw();\n"})})}),(0,r.jsx)(i.A,{value:"React",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:"live react",live:!0,children:"import { Stage, Layer, Text, Star } from 'react-konva';\nimport { useState, useRef } from 'react';\n\nconst App = () => {\n  const [stars] = useState(() =>\n    Array.from({ length: 10 }, (_, i) => ({\n      id: i,\n      x: window.innerWidth * Math.random(),\n      y: window.innerHeight * Math.random(),\n      fill: 'blue',\n      name: `star ${i}`,\n    }))\n  );\n  const [message, setMessage] = useState('');\n  const previousShapeRef = useRef(null);\n  const mainLayerRef = useRef(null);\n  const tempLayerRef = useRef(null);\n\n  const handleDragStart = (e) => {\n    const shape = e.target;\n    shape.moveTo(tempLayerRef.current);\n    setMessage('Moving ' + shape.name());\n  };\n\n  const handleDragMove = (e) => {\n    const stage = e.target.getStage();\n    const pos = stage.getPointerPosition();\n    const shape = mainLayerRef.current.getIntersection(pos);\n\n    if (previousShapeRef.current && shape) {\n      if (previousShapeRef.current !== shape) {\n        // \u79bb\u5f00\u65e7\u76ee\u6807\n        previousShapeRef.current.fire('dragleave', { evt: e.evt }, true);\n        // \u8fdb\u5165\u65b0\u76ee\u6807\n        shape.fire('dragenter', { evt: e.evt }, true);\n        previousShapeRef.current = shape;\n      } else {\n        previousShapeRef.current.fire('dragover', { evt: e.evt }, true);\n      }\n    } else if (!previousShapeRef.current && shape) {\n      previousShapeRef.current = shape;\n      shape.fire('dragenter', { evt: e.evt }, true);\n    } else if (previousShapeRef.current && !shape) {\n      previousShapeRef.current.fire('dragleave', { evt: e.evt }, true);\n      previousShapeRef.current = undefined;\n    }\n  };\n\n  const handleDragEnd = (e) => {\n    const shape = e.target;\n    const stage = e.target.getStage();\n    const pos = stage.getPointerPosition();\n    const dropShape = mainLayerRef.current.getIntersection(pos);\n    \n    if (dropShape) {\n      previousShapeRef.current.fire('drop', { evt: e.evt }, true);\n    }\n    \n    shape.moveTo(mainLayerRef.current);\n    previousShapeRef.current = undefined;\n  };\n\n  const handleDragEnter = (e) => {\n    e.target.fill('green');\n    setMessage('dragenter ' + e.target.name());\n  };\n\n  const handleDragLeave = (e) => {\n    e.target.fill('blue');\n    setMessage('dragleave ' + e.target.name());\n  };\n\n  const handleDragOver = (e) => {\n    setMessage('dragover ' + e.target.name());\n  };\n\n  const handleDrop = (e) => {\n    e.target.fill('red');\n    setMessage('drop ' + e.target.name());\n  };\n\n  return (\n    <Stage width={window.innerWidth} height={window.innerHeight}>\n      <Layer ref={mainLayerRef}>\n        <Text text={message} fill=\"black\" />\n        {stars.map((star) => (\n          <Star\n            key={star.id}\n            id={star.id}\n            name={star.name}\n            x={star.x}\n            y={star.y}\n            numPoints={10}\n            innerRadius={20}\n            outerRadius={25}\n            fill={star.fill}\n            shadowOffsetX={5}\n            shadowOffsetY={5}\n            draggable\n            onDragStart={handleDragStart}\n            onDragMove={handleDragMove}\n            onDragEnd={handleDragEnd}\n            onDragEnter={handleDragEnter}\n            onDragLeave={handleDragLeave}\n            onDragOver={handleDragOver}\n            onDrop={handleDrop}\n          />\n        ))}\n      </Layer>\n      <Layer ref={tempLayerRef} />\n    </Stage>\n  );\n};\n\nexport default App;\n"})})}),(0,r.jsx)(i.A,{value:"Vue",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-vue",metastring:"live vue",live:!0,children:"<template>\n  <v-stage :config=\"stageSize\">\n    <v-layer ref=\"mainLayer\">\n      <v-text :config=\"textConfig\" />\n      <v-star\n        v-for=\"star in stars\"\n        :key=\"star.id\"\n        :config=\"getStarConfig(star)\"\n        @dragstart=\"handleDragStart\"\n        @dragmove=\"handleDragMove\"\n        @dragend=\"handleDragEnd\"\n        @dragenter=\"handleDragEnter\"\n        @dragleave=\"handleDragLeave\"\n        @dragover=\"handleDragOver\"\n        @drop=\"handleDrop\"\n      />\n    </v-layer>\n    <v-layer ref=\"tempLayer\" />\n  </v-stage>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\n\nconst stageSize = {\n  width: window.innerWidth,\n  height: window.innerHeight\n};\n\nconst message = ref('');\nconst mainLayer = ref(null);\nconst tempLayer = ref(null);\nconst previousShape = ref(null);\n\nconst stars = ref(Array.from({ length: 10 }, (_, i) => ({\n  id: i,\n  x: window.innerWidth * Math.random(),\n  y: window.innerHeight * Math.random(),\n  fill: 'blue',\n  name: `star ${i}`\n})));\n\nconst textConfig = computed(() => ({\n  text: message.value,\n  fill: 'black'\n}));\n\nconst getStarConfig = (star) => ({\n  id: star.id,\n  name: star.name,\n  x: star.x,\n  y: star.y,\n  numPoints: 10,\n  innerRadius: 20,\n  outerRadius: 25,\n  fill: star.fill,\n  shadowOffsetX: 5,\n  shadowOffsetY: 5,\n  draggable: true\n});\n\nconst handleDragStart = (e) => {\n  const shape = e.target;\n  shape.moveTo(tempLayer.value.getNode());\n  message.value = 'Moving ' + shape.attrs.name;\n};\n\nconst handleDragMove = (e) => {\n  const stage = e.target.getStage();\n  const pos = stage.getPointerPosition();\n  const shape = mainLayer.value.getNode().getIntersection(pos);\n\n  if (previousShape.value && shape) {\n    if (previousShape.value !== shape) {\n      // \u79bb\u5f00\u65e7\u76ee\u6807\n      previousShape.value.fire('dragleave', { evt: e.evt }, true);\n      // \u8fdb\u5165\u65b0\u76ee\u6807\n      shape.fire('dragenter', { evt: e.evt }, true);\n      previousShape.value = shape;\n    } else {\n      previousShape.value.fire('dragover', { evt: e.evt }, true);\n    }\n  } else if (!previousShape.value && shape) {\n    previousShape.value = shape;\n    shape.fire('dragenter', { evt: e.evt }, true);\n  } else if (previousShape.value && !shape) {\n    previousShape.value.fire('dragleave', { evt: e.evt }, true);\n    previousShape.value = null;\n  }\n};\n\nconst handleDragEnd = (e) => {\n  const shape = e.target;\n  const stage = e.target.getStage();\n  const pos = stage.getPointerPosition();\n  const dropShape = mainLayer.value.getNode().getIntersection(pos);\n  \n  if (dropShape) {\n    previousShape.value.fire('drop', { evt: e.evt }, true);\n  }\n  \n  shape.moveTo(mainLayer.value.getNode());\n  previousShape.value = null;\n};\n\nconst handleDragEnter = (e) => {\n  const shape = e.target;\n  shape.fill('green');\n  message.value = 'dragenter ' + shape.attrs.name;\n};\n\nconst handleDragLeave = (e) => {\n  const shape = e.target;\n  shape.fill('blue');\n  message.value = 'dragleave ' + shape.attrs.name;\n};\n\nconst handleDragOver = (e) => {\n  message.value = 'dragover ' + e.target.attrs.name;\n};\n\nconst handleDrop = (e) => {\n  const shape = e.target;\n  shape.fill('red');\n  message.value = 'drop ' + shape.attrs.name;\n};\n<\/script>\n"})})})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var a=t(34164);const r={tabItem:"tabItem_Ymn6"};var s=t(74848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,o),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>w});var a=t(96540),r=t(34164),s=t(23104),o=t(56347),i=t(205),l=t(57485),u=t(31682),d=t(70679);function c(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return c(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,u.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const r=(0,o.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function v(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=p(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[u,c]=g({queryString:t,groupId:r}),[v,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,d.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),m=(()=>{const e=u??v;return h({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{m&&l(m)}),[m]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),f(e)}),[c,f,s]),tabValues:s}}var f=t(92303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function y(e){let{className:n,block:t,selectedValue:a,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),r=i[t].value;r!==a&&(u(n),o(r))},c=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:c,onClick:d,...s,className:(0,r.A)("tabs__item",m.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function S(e){let{lazy:n,children:t,selectedValue:s}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function x(e){const n=v(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",m.tabList),children:[(0,b.jsx)(y,{...n,...e}),(0,b.jsx)(S,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,b.jsx)(x,{...e,children:c(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(96540);const r={},s=a.createContext(r);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);